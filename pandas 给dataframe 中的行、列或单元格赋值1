{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2019-01-11T13:38:34.844272Z",
     "start_time": "2019-01-11T13:38:34.590737Z"
    }
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "from tabulate import tabulate"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## pandas 给dataframe 中的行、列或单元格赋值"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2019-01-11T13:43:07.088308Z",
     "start_time": "2019-01-11T13:43:07.066670Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "          GENDER    RACE    DEPARTMENT            YEARS EXPERIENCE    SALARY\n",
      "--------  --------  ------  ------------------  ------------------  --------\n",
      "Tom       Male      White   Engineering                         23    107962\n",
      "Niko      Male      Black   Engineering                          1     30347\n",
      "Penelope  Female    White   Engineering                         12     60258\n",
      "Aria      Female    Black   Engineering                          8     43618\n",
      "Sofia     Female    Black   Parks & Recreation                  23     26125\n",
      "Dean      Male      Black   Parks & Recreation                   3     33592\n",
      "Zach      Male      White   Parks & Recreation                   4     37565\n"
     ]
    }
   ],
   "source": [
    "df = pd.read_csv('data/employee_sample.csv',index_col=0)\n",
    "print(tabulate(df,headers=df.columns,tablefmt='simple'))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "+ 给dataframe 加1列 如下"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "1. 给df增加score列并使用单个值给该列赋值"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2019-01-11T13:44:04.384117Z",
     "start_time": "2019-01-11T13:44:04.371316Z"
    }
   },
   "outputs": [],
   "source": [
    "df['score'] =100"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2019-01-11T13:44:18.642337Z",
     "start_time": "2019-01-11T13:44:18.624068Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "          GENDER    RACE    DEPARTMENT            YEARS EXPERIENCE    SALARY    score\n",
      "--------  --------  ------  ------------------  ------------------  --------  -------\n",
      "Tom       Male      White   Engineering                         23    107962      100\n",
      "Niko      Male      Black   Engineering                          1     30347      100\n",
      "Penelope  Female    White   Engineering                         12     60258      100\n",
      "Aria      Female    Black   Engineering                          8     43618      100\n",
      "Sofia     Female    Black   Parks & Recreation                  23     26125      100\n",
      "Dean      Male      Black   Parks & Recreation                   3     33592      100\n",
      "Zach      Male      White   Parks & Recreation                   4     37565      100\n"
     ]
    }
   ],
   "source": [
    "print(tabulate(df,headers=df.columns,tablefmt='simple'))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "2. 使用np.array给df增加rate列并赋值"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2019-01-11T13:49:55.873036Z",
     "start_time": "2019-01-11T13:49:55.856622Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.69, 0.16, 0.9 , 0.21, 0.25, 0.5 , 0.09])"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rates = np.round(np.random.rand(7),2)\n",
    "rates"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2019-01-11T13:50:10.625394Z",
     "start_time": "2019-01-11T13:50:10.609166Z"
    }
   },
   "outputs": [],
   "source": [
    "df['rate']=rates"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2019-01-11T13:50:22.572334Z",
     "start_time": "2019-01-11T13:50:22.551573Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "          GENDER    RACE    DEPARTMENT            YEARS EXPERIENCE    SALARY    score    rate\n",
      "--------  --------  ------  ------------------  ------------------  --------  -------  ------\n",
      "Tom       Male      White   Engineering                         23    107962      100    0.69\n",
      "Niko      Male      Black   Engineering                          1     30347      100    0.16\n",
      "Penelope  Female    White   Engineering                         12     60258      100    0.9\n",
      "Aria      Female    Black   Engineering                          8     43618      100    0.21\n",
      "Sofia     Female    Black   Parks & Recreation                  23     26125      100    0.25\n",
      "Dean      Male      Black   Parks & Recreation                   3     33592      100    0.5\n",
      "Zach      Male      White   Parks & Recreation                   4     37565      100    0.09\n"
     ]
    }
   ],
   "source": [
    "print(tabulate(df,headers=df.columns,tablefmt='simple'))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "3. 同上"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2019-01-11T13:52:44.008872Z",
     "start_time": "2019-01-11T13:52:44.003359Z"
    }
   },
   "outputs": [],
   "source": [
    "score = np.random.randint(0,100,len(df))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2019-01-11T13:52:47.811813Z",
     "start_time": "2019-01-11T13:52:47.801475Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([60, 20, 84, 34, 71,  0,  0])"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2019-01-11T13:52:50.170283Z",
     "start_time": "2019-01-11T13:52:50.159502Z"
    }
   },
   "outputs": [],
   "source": [
    "df['score']=score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2019-01-11T13:52:53.106871Z",
     "start_time": "2019-01-11T13:52:53.080264Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "          GENDER    RACE    DEPARTMENT            YEARS EXPERIENCE    SALARY    score    rate\n",
      "--------  --------  ------  ------------------  ------------------  --------  -------  ------\n",
      "Tom       Male      White   Engineering                         23    107962       60    0.69\n",
      "Niko      Male      Black   Engineering                          1     30347       20    0.16\n",
      "Penelope  Female    White   Engineering                         12     60258       84    0.9\n",
      "Aria      Female    Black   Engineering                          8     43618       34    0.21\n",
      "Sofia     Female    Black   Parks & Recreation                  23     26125       71    0.25\n",
      "Dean      Male      Black   Parks & Recreation                   3     33592        0    0.5\n",
      "Zach      Male      White   Parks & Recreation                   4     37565        0    0.09\n"
     ]
    }
   ],
   "source": [
    "print(tabulate(df,headers=df.columns,tablefmt='simple'))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "4. 使用list列表给df增加floor列，并且赋值"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2019-01-11T13:53:54.452128Z",
     "start_time": "2019-01-11T13:53:54.435074Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "          GENDER    RACE    DEPARTMENT            YEARS EXPERIENCE    SALARY    score    rate    floor\n",
      "--------  --------  ------  ------------------  ------------------  --------  -------  ------  -------\n",
      "Tom       Male      White   Engineering                         23    107962       60    0.69       10\n",
      "Niko      Male      Black   Engineering                          1     30347       20    0.16        2\n",
      "Penelope  Female    White   Engineering                         12     60258       84    0.9         3\n",
      "Aria      Female    Black   Engineering                          8     43618       34    0.21        4\n",
      "Sofia     Female    Black   Parks & Recreation                  23     26125       71    0.25        9\n",
      "Dean      Male      Black   Parks & Recreation                   3     33592        0    0.5         2\n",
      "Zach      Male      White   Parks & Recreation                   4     37565        0    0.09        4\n"
     ]
    }
   ],
   "source": [
    "floor=[10,2,3,4,9,2,4]\n",
    "df['floor']=floor\n",
    "print(tabulate(df,headers=df.columns,tablefmt='simple'))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "5. 使用Series给df增加lastname列，并且赋值"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2019-01-11T14:09:01.335223Z",
     "start_time": "2019-01-11T14:09:01.322751Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0       Smith\n",
       "1       Jones\n",
       "2    Williams\n",
       "3       Green\n",
       "4       Brown\n",
       "5     Simpson\n",
       "6      Peters\n",
       "dtype: object"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "last_name = pd.Series(['Smith', 'Jones', 'Williams', 'Green', 'Brown', 'Simpson', 'Peters'])\n",
    "last_name"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2019-01-11T14:00:21.314029Z",
     "start_time": "2019-01-11T14:00:21.296078Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "          GENDER    RACE    DEPARTMENT            YEARS EXPERIENCE    SALARY    score    rate    floor    lastname\n",
      "--------  --------  ------  ------------------  ------------------  --------  -------  ------  -------  ----------\n",
      "Tom       Male      White   Engineering                         23    107962       60    0.69       10         nan\n",
      "Niko      Male      Black   Engineering                          1     30347       20    0.16        2         nan\n",
      "Penelope  Female    White   Engineering                         12     60258       84    0.9         3         nan\n",
      "Aria      Female    Black   Engineering                          8     43618       34    0.21        4         nan\n",
      "Sofia     Female    Black   Parks & Recreation                  23     26125       71    0.25        9         nan\n",
      "Dean      Male      Black   Parks & Recreation                   3     33592        0    0.5         2         nan\n",
      "Zach      Male      White   Parks & Recreation                   4     37565        0    0.09        4         nan\n"
     ]
    }
   ],
   "source": [
    "df['lastname']=last_name\n",
    "print(tabulate(df,headers=df.columns,tablefmt='simple'))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**为啥上个例子lastname的值都是Nan？原因是index不匹配**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2019-01-11T14:06:32.036867Z",
     "start_time": "2019-01-11T14:06:32.025089Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "RangeIndex(start=0, stop=7, step=1)"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "last_name.index"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2019-01-11T14:06:36.143553Z",
     "start_time": "2019-01-11T14:06:36.131981Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Tom', 'Niko', 'Penelope', 'Aria', 'Sofia', 'Dean', 'Zach'], dtype='object')"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.index"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**index一个是数值，一个是字符串，现在搞成一样的**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2019-01-11T14:09:06.499724Z",
     "start_time": "2019-01-11T14:09:06.490427Z"
    }
   },
   "outputs": [],
   "source": [
    "last_name=pd.Series(last_name.values,index=df.index)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2019-01-11T14:09:08.716093Z",
     "start_time": "2019-01-11T14:09:08.706680Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Tom            Smith\n",
       "Niko           Jones\n",
       "Penelope    Williams\n",
       "Aria           Green\n",
       "Sofia          Brown\n",
       "Dean         Simpson\n",
       "Zach          Peters\n",
       "dtype: object"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "last_name"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2019-01-11T14:09:24.005213Z",
     "start_time": "2019-01-11T14:09:23.987146Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "          GENDER    RACE    DEPARTMENT            YEARS EXPERIENCE    SALARY    score    rate    floor  lastname\n",
      "--------  --------  ------  ------------------  ------------------  --------  -------  ------  -------  ----------\n",
      "Tom       Male      White   Engineering                         23    107962       60    0.69       10  Smith\n",
      "Niko      Male      Black   Engineering                          1     30347       20    0.16        2  Jones\n",
      "Penelope  Female    White   Engineering                         12     60258       84    0.9         3  Williams\n",
      "Aria      Female    Black   Engineering                          8     43618       34    0.21        4  Green\n",
      "Sofia     Female    Black   Parks & Recreation                  23     26125       71    0.25        9  Brown\n",
      "Dean      Male      Black   Parks & Recreation                   3     33592        0    0.5         2  Simpson\n",
      "Zach      Male      White   Parks & Recreation                   4     37565        0    0.09        4  Peters\n"
     ]
    }
   ],
   "source": [
    "df['lastname']=last_name\n",
    "print(tabulate(df,headers=df.columns,tablefmt='simple'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.0"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": true,
   "toc_window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
